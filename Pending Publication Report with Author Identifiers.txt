PENDING PUBLICATION REPORT WITH AUTHOR IDENTIFIERS

COLUMN HEADERS: 

User ID|Name|Role|Department|School|Pending Book|Pending Chapter|Pending Conference|Pending Journal Article| No Pending (Null)|Pending Other|Pending Poster|Pending Presentation| Pending Report|Pending Scholarly Edition|Pending Software/Code| User ID| Researcher ID|ORCID|	Scopus Author ID|Email

NOTES: 
1. There are two UserID columns. These should match each other. You can delete the second one. 
2. Multiple Researcher IDs, Scopus Author IDs, Emails, are separated by a semi-colon. 
3. This report runs in Microsoft SQL Serv 2012 and 2014. 

WHEN TO USE THIS:
Use this report when you need a list of pending publications by user and also want to check if the user has unique identifiers. 


CODE BASE:

use [Elements-reporting2]


SELECT * FROM	(
	SELECT * FROM (

		SELECT  u.[ID],u.[Computed Name Abbreviated],  u.[Position] 
				 ,LEFT(u.[Department],  CHARINDEX(';', u.[Department])) "True Department" 
				 ,RIGHT(u.[Department], LEN(u.[Department]) - CHARINDEX(';', u.[Department])) "True School"
				 ,p.[Type] AS pend_pub_type
				 ,COUNT(p.ID) AS "pend_pub_count"
		
	

		FROM    [User] u 
         			LEFT JOIN [Pending Publication] pp ON pp.[User ID] = u.ID 
        			LEFT JOIN [Publication] p ON p.[ID] = pp.[Publication ID]
			
			
		WHERE u.[Is Current Staff] = 1 
				 AND u.[Is Academic] = 1

		GROUP BY u.[ID]
				 ,[Computed Name Abbreviated] 
				 ,[Position]
				 ,u.[Department] 
				 ,p.[Type]
			

	) t

	PIVOT
	(
		MAX(pend_pub_count) 
		FOR [pend_pub_type] IN 
			([Book], 
			[Chapter], 
			[Conference], 
			[Journal Article], 
			[Null], 
			[Other], 
			[Poster], 
			[Presentation], 
			[Report], 
			[Scholarly edition], 
			[Software / Code])
	) AS pend_pivot_table

) as final_pend_pivot_table

LEFT JOIN
				
				(SELECT * FROM	(
					SELECT
						 [User ID]
						,[Identifier Scheme ID]
						 ,STUFF(
							 (SELECT ';' + [Identifier Value] from [User Identifier]
							  WHERE [User ID] = a.[User ID] AND [Identifier Scheme ID] = a.[Identifier Scheme ID]
							  FOR XML PATH (''))
							  , 1, 1, '')  AS ME_String
					FROM [User Identifier] AS a
					GROUP BY [User ID]
							,[Identifier Scheme ID]
				) q
		
			PIVOT
				(
				MAX([ME_String]) 
				FOR [Identifier Scheme ID] IN 
					([8], 
					[9], 
					[10], 
					[17])
		
				)
			
		 AS final_id_pivot_table
		 ) as final_id_pivot_table2
		 
 	ON final_pend_pivot_table.[ID] = final_id_pivot_table2.[User ID]

 
